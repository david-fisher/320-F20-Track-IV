/* 
The CSS file. Handles the placement of elements defined with className. 
It looks like we can handle React Components individually with CSS, which is cool!
Hopefully using CSS for components is more efficient, but for now I separated things into "divs"
to orient them correctly.  
*/
.Login {
    text-align: center;
  }
  
  .Login-header {
    padding-top: 1em;
    background-color:#881c1c;
    height: 5em; /* Replaced vh with em so the banner doesn't shift as height of browser decreases*/
    color: #eeeeee;
    text-align: center;
  }
  
  .Login-text{
    padding-top: 4em;
    padding-left: 2em;
    text-align: left;
  }
  
  .Left-Button {
    padding-left: 30px;
    padding-right: 30px;
    
    width: 50%;
    /* Frankly, not the *proper* way of centering the buttons vertically.
        Went searching through Stack Overflow, but didn't click yet.
        Will be extremely useful to know for future sprints. 
        TL;DR it literally squashes the div so the buttons naturally are lowered.
    */
    margin-top: 10em; /*Originally 325 px*/
    float: left;
    /*This basically sets this div to the left. Apparently you can also set up pages like a table? Not sure which is better.*/
    background-color: inherit; /*Removed since I made everything separate from the header*/
    /*Divs have inheritance! This takes the background-color property from app-header*/
  }
  
  .Right-Button {
    padding-left: 30px;
    padding-right: 30px;
    width: 50%;
    float: left;
    text-align:center;
    margin-top: 10em; /*Originally 325px*/
    background-color: inherit; 
  }
  
  .Login-Form {
    text-align: center;
    background-color: inherit; 
    float: center;
  }
  
  .Login-Button {
    padding-left: 30px;
    padding-right: 30px;
    width: 50%;
    float: center;
    text-align:center;
    margin-top: 5em; /*Originally 325px*/
    background-color: inherit; 
  }
  
  .App-link {
    color: #881C1C;
  }
  